<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Easytl</name>
    </assembly>
    <members>
        <member name="P:Easytl.CommunicationHelper.TCPClient.Connected">
            <summary>
            获取到远程主机的连接状态
            </summary>
        </member>
        <member name="F:Easytl.CommunicationHelper.TCPClient.TCP_Client">
            <summary>
            TCP连接
            </summary>
        </member>
        <member name="F:Easytl.CommunicationHelper.TCPClient.ReciveMessage">
            <summary>
            缓冲区字符串
            </summary>
        </member>
        <member name="E:Easytl.CommunicationHelper.TCPClient.Data_Recive_Event">
            <summary>
            接收到来自网络的数据时触发事件
            </summary>
        </member>
        <member name="M:Easytl.CommunicationHelper.TCPClient.Connect(System.Net.IPEndPoint)">
            <summary>
            连接到远程主机
            </summary>
        </member>
        <member name="M:Easytl.CommunicationHelper.TCPClient.Recive">
            <summary>
            接收数据
            </summary>
        </member>
        <member name="M:Easytl.CommunicationHelper.TCPClient.AnalyCommand(System.String,System.String@)">
            <summary>
            分析协议，必须重写此方法
            </summary>
            <returns>返回协议长度（若协议解析失败则返回失败部分长度，若协议不完整则返回0）</returns>
        </member>
        <member name="M:Easytl.CommunicationHelper.TCPClient.Send(System.String)">
            <summary>
            发送数据
            </summary>
            <param name="Data">字符串</param>
        </member>
        <member name="M:Easytl.CommunicationHelper.TCPClient.Close">
            <summary>
            关闭所有连接并释放内存
            </summary>
        </member>
        <member name="F:Easytl.CommunicationHelper.COMHelper.isdispose">
            <summary>
            该类是否已被释放
            </summary>
        </member>
        <member name="P:Easytl.CommunicationHelper.COMHelper.IsDispose">
            <summary>
            该类是否已被释放
            </summary>
        </member>
        <member name="F:Easytl.CommunicationHelper.COMHelper._COM_Bind_Id">
            <summary>
            COM串口号
            </summary>
        </member>
        <member name="P:Easytl.CommunicationHelper.COMHelper.COM_Bind_Id">
            <summary>
            获取COM串口号
            </summary>
        </member>
        <member name="F:Easytl.CommunicationHelper.COMHelper._COM_Bind_BaudRate">
            <summary>
            COM波特率
            </summary>
        </member>
        <member name="P:Easytl.CommunicationHelper.COMHelper.COM_Bind_BaudRate">
            <summary>
            获取COM波特率
            </summary>
        </member>
        <member name="F:Easytl.CommunicationHelper.COMHelper.COM_Client">
            <summary>
            COM连接
            </summary>
        </member>
        <member name="M:Easytl.CommunicationHelper.COMHelper.Data_Recive_Fun(System.String,System.Int32)">
            <summary>
            接收到来自串口的数据时触发事件
            </summary>
            <param name="Recive_Data"></param>
            <param name="COM_Id"></param>
        </member>
        <member name="M:Easytl.CommunicationHelper.COMHelper.#ctor(System.Int32,System.Int32)">
            <summary>
            COM_Touch实例化
            </summary>
            <param name="Port_Bind">绑定的本机接收串口号</param>
        </member>
        <member name="M:Easytl.CommunicationHelper.COMHelper.COM_Open">
            <summary>
            打开串口
            </summary>
        </member>
        <member name="M:Easytl.CommunicationHelper.COMHelper.COM_Close">
            <summary>
            关闭串口
            </summary>
        </member>
        <member name="M:Easytl.CommunicationHelper.COMHelper.Recive(System.Object)">
            <summary>
            接收数据
            </summary>
        </member>
        <member name="M:Easytl.CommunicationHelper.COMHelper.Send(System.String,System.Int32)">
            <summary>
            发送数据
            </summary>
            <param name="Data_Base16">16进制字符串</param>
            <param name="COM_Bind">要发送的COM地址</param>
            <returns>0：发送失败，1：发送成功，-99：数据为空</returns>
        </member>
        <member name="M:Easytl.CommunicationHelper.COMHelper.Dispose">
            <summary>
            关闭所有连接并释放内存
            </summary>
        </member>
        <member name="T:Easytl.CommunicationHelper.PortHelper">
            <summary>
            端口操作类
            </summary>
        </member>
        <member name="M:Easytl.CommunicationHelper.PortHelper.PortInUse(System.Int32)">
            <summary>
            检测端口是否正在使用
            </summary>
        </member>
        <member name="M:Easytl.CommunicationHelper.PortHelper.GetCanUsePort(System.Int32,System.Int32)">
            <summary>
            在范围内获取一个可使用的端口号
            </summary>
        </member>
        <member name="P:Easytl.CommunicationHelper.UDPClient.Port_Local">
            <summary>
            获取本地UDP连接端口
            </summary>
        </member>
        <member name="F:Easytl.CommunicationHelper.UDPClient.UDP_Client">
            <summary>
            UDP连接
            </summary>
        </member>
        <member name="F:Easytl.CommunicationHelper.UDPClient.ReciveMessage">
            <summary>
            缓冲区字符串
            </summary>
        </member>
        <member name="E:Easytl.CommunicationHelper.UDPClient.Data_Recive_Event">
            <summary>
            接收到来自网络的数据时触发事件
            </summary>
        </member>
        <member name="M:Easytl.CommunicationHelper.UDPClient.#ctor(System.Int32)">
            <summary>
            UDPClient实例化
            </summary>
            <param name="_Port_Local">绑定的本机接收端口号</param>
        </member>
        <member name="M:Easytl.CommunicationHelper.UDPClient.Recive(System.Object)">
            <summary>
            接收数据
            </summary>
        </member>
        <member name="M:Easytl.CommunicationHelper.UDPClient.AnalyCommand(System.String,System.String@)">
            <summary>
            分析协议，必须重写此方法
            </summary>
            <returns>返回协议长度（若协议解析失败则返回失败部分长度，若协议不完整则返回0）</returns>
        </member>
        <member name="M:Easytl.CommunicationHelper.UDPClient.Send(System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            发送数据
            </summary>
            <param name="Data">字符串</param>
            <param name="Net_Address">要发送的远程端IP地址</param>
            <param name="Net_Port">要发送的远程端端口号</param>
        </member>
        <member name="M:Easytl.CommunicationHelper.UDPClient.Close">
            <summary>
            关闭所有连接并释放内存
            </summary>
        </member>
        <member name="F:Easytl.CommunicationHelper.TCPServer.TCP_Listener">
            <summary>
            TCP侦听类
            </summary>
        </member>
        <member name="F:Easytl.CommunicationHelper.TCPServer.TCP_Client_List">
            <summary>
            TCP连接列表(键：IP地址)
            </summary>
        </member>
        <member name="F:Easytl.CommunicationHelper.TCPServer.ReciveMessage">
            <summary>
            缓冲区字符串
            </summary>
        </member>
        <member name="E:Easytl.CommunicationHelper.TCPServer.Connect_Event">
            <summary>
            接收到来自网络的连接请求时触发事件
            </summary>
        </member>
        <member name="E:Easytl.CommunicationHelper.TCPServer.Data_Recive_Event">
            <summary>
            接收到来自网络的数据时触发事件
            </summary>
        </member>
        <member name="M:Easytl.CommunicationHelper.TCPServer.#ctor(System.Int32)">
            <summary>
            TCP_Touch实例化
            </summary>
            <param name="_Port_Local">绑定的本地TCP通讯端口号</param>
        </member>
        <member name="M:Easytl.CommunicationHelper.TCPServer.Listen">
            <summary>
            侦听端口
            </summary>
        </member>
        <member name="M:Easytl.CommunicationHelper.TCPServer.Recive">
            <summary>
            接收数据
            </summary>
        </member>
        <member name="M:Easytl.CommunicationHelper.TCPServer.AnalyCommand(System.String,System.String@)">
            <summary>
            分析协议，必须重写此方法
            </summary>
            <returns>返回协议长度（若协议解析失败则返回失败部分长度，若协议不完整则返回0）</returns>
        </member>
        <member name="M:Easytl.CommunicationHelper.TCPServer.Send(System.String,System.String)">
            <summary>
            发送数据
            </summary>
            <param name="Data">字符串</param>
            <param name="Net_Address">要发送的远程端IP地址</param>
        </member>
        <member name="M:Easytl.CommunicationHelper.TCPServer.Dispose">
            <summary>
            关闭所有连接并释放内存
            </summary>
        </member>
        <member name="M:Easytl.SignHelper.SignHelper.GetSign``1(``0,System.Reflection.BindingFlags,System.String,System.Text.Encoding,Easytl.SafeHelper.EncryptionHelper.Encrypt_RPType,Easytl.SafeHelper.EncryptionHelper.Encrypt_Type,System.String,System.String,System.Boolean,System.StringComparison)">
            <summary>
            获取签名
            </summary>
        </member>
        <member name="M:Easytl.SignHelper.SignHelper.GetSign(System.Collections.Specialized.NameValueCollection,System.String,System.Text.Encoding,Easytl.SafeHelper.EncryptionHelper.Encrypt_RPType,Easytl.SafeHelper.EncryptionHelper.Encrypt_Type,System.String,System.String,System.Boolean,System.StringComparison)">
            <summary>
            获取签名
            </summary>
        </member>
        <member name="M:Easytl.SignHelper.SignHelper.GetSignBefore(System.Collections.Specialized.NameValueCollection,System.String,System.Boolean,System.StringComparison)">
            <summary>
            获取签名（加密前）
            </summary>
        </member>
        <member name="M:Easytl.SignHelper.SignHelper.GetSign(System.String,System.Text.Encoding,Easytl.SafeHelper.EncryptionHelper.Encrypt_RPType,Easytl.SafeHelper.EncryptionHelper.Encrypt_Type,System.String,System.String)">
            <summary>
            获取签名
            </summary>
        </member>
        <member name="T:Easytl.SignHelper.Attribute.NoSignAttribute">
            <summary>
            表示属性或字段不参与签名
            </summary>
        </member>
        <member name="T:Easytl.THelper">
            <summary>
            各种格式转换类
            </summary>
        </member>
        <member name="M:Easytl.THelper.R``1(``0@,System.Object[])">
            <summary>
            类实例化（方便重用）
            </summary>
        </member>
        <member name="M:Easytl.THelper.C``1(System.Object,``0)">
            <summary>
            类型转换
            </summary>
        </member>
        <member name="M:Easytl.THelper.ToSplitString``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.String)">
            <summary>
            返回以分隔符隔开的字符串
            </summary>
        </member>
        <member name="M:Easytl.THelper.GetEnumDescription(System.Enum,System.Boolean)">
            <summary>
            获取枚举值上的Description特性的说明
            </summary>
            <param name="EnumValue">枚举值</param>
            <returns>特性的说明</returns>
        </member>
        <member name="M:Easytl.THelper.GetCustomAttribute``1(System.Reflection.MemberInfo)">
            <summary>
            获取自定义特性
            </summary>
        </member>
        <member name="M:Easytl.THelper.GetCustomAttribute_FirstValue``1(System.Reflection.MemberInfo)">
            <summary>
            获取自定义属性的默认值
            </summary>
            <param name="EnumValue">自定义属性</param>
            <returns>特性的说明</returns>
        </member>
        <member name="M:Easytl.THelper.ToXmlString``1(``0,System.Boolean,System.String,System.Reflection.BindingFlags)">
            <summary>
            将对象的属性和值转化为XML字符串
            </summary>
            <typeparam name="T">要转化的对象类型</typeparam>
            <param name="obj">要转化的对象</param>
            <param name="WriteNull">是否写入空值属性</param>
            <param name="bindingAttr">一个位屏蔽，由一个或多个指定搜索执行方式的 System.Reflection.BindingFlags 组成。- 或 -零，以返回 null。</param>
        </member>
        <member name="M:Easytl.THelper.XmlToObject``1(System.String,System.String,System.Reflection.BindingFlags)">
            <summary>
            Xml转化为类
            </summary>
        </member>
        <member name="M:Easytl.THelper.ToJsonString(System.Data.DataTable,System.Boolean)">
            <summary>
            将一个数据表转换成一个JSON字符串，在客户端可以直接转换成二维数组。
            </summary>
            <param name="source">需要转换的表。</param>
            <returns>Json字符</returns>
            <author>william</author>
            <createtime>2011-7-1</createtime>
            <remarks></remarks>      
        </member>
        <member name="M:Easytl.THelper.GetRandomString(System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.String)">
            <summary>
            生成随机字符串 
            </summary>
            <param name="length">目标字符串的长度</param>
            <param name="useNum">是否包含数字，1=包含，默认为包含</param>
            <param name="useLow">是否包含小写字母，1=包含，默认为包含</param>
            <param name="useUpp">是否包含大写字母，1=包含，默认为包含</param>
            <param name="useSpe">是否包含特殊字符，1=包含，默认为不包含</param>
            <param name="custom">要包含的自定义字符，直接输入要包含的字符列表</param>
            <returns>指定长度的随机字符串</returns>
        </member>
        <member name="M:Easytl.THelper.CheckEmpty``1(``0,System.Collections.Generic.List{System.String})">
            <summary>
            检查是否有属性为空
            </summary>
        </member>
        <member name="M:Easytl.THelper.Show(System.Windows.Forms.Form,System.Windows.Forms.IWin32Window)">
            <summary>
            向用户显示控件
            </summary>
        </member>
        <member name="M:Easytl.THelper.DateToB2Str16(System.DateTime,System.Int32)">
            <summary>
            日期转化为(16进制)2字节字符串（默认支持最大日期到2063年）
            </summary>
            <param name="date">日期</param>
            <param name="StartYear">计算开始日期</param>
            <returns></returns>
        </member>
        <member name="M:Easytl.THelper.DateToB4Str16(System.DateTime,System.Int32)">
            <summary>
            日期和时间转化为(16进制)4字节字符串（默认支持最大日期到2063年）
            </summary>
            <param name="date">日期和时间</param>
            <param name="StartYear">计算开始日期</param>
            <returns></returns>
        </member>
        <member name="M:Easytl.THelper.ByteToDate(System.String,System.Int32)">
            <summary>
            (16进制)2字节字符串转化为日期
            </summary>
            <param name="Bs">16进制2字节字符串</param>
            <param name="startpoint">开始截取位置</param>
            <returns></returns>
        </member>
        <member name="M:Easytl.THelper.Byte4ToDate(System.String,System.Int32)">
            <summary>
            (16进制)4字节字符串转化为时间
            </summary>
            <param name="Bs">16进制4字节字符串</param>
            <param name="startpoint">开始截取位置</param>
            <returns></returns>
        </member>
        <member name="M:Easytl.THelper.Str_Add0_Before(System.String,System.Int32)">
            <summary>
            字符串前补0
            </summary>
            <param name="b"></param>
            <param name="blength"></param>
            <returns></returns>
        </member>
        <member name="M:Easytl.THelper.Str_Add0_After(System.String,System.Int32)">
            <summary>
            字符串后补0
            </summary>
            <param name="b"></param>
            <param name="blength"></param>
            <returns></returns>
        </member>
        <member name="M:Easytl.THelper.Str_AddChar_Before(System.String,System.Int32,System.String)">
            <summary>
            字符串前补字符
            </summary>
            <param name="b"></param>
            <param name="blength"></param>
            <returns></returns>
        </member>
        <member name="M:Easytl.THelper.Str_AddChar_After(System.String,System.Int32,System.String)">
            <summary>
            字符串后补字符
            </summary>
            <param name="b"></param>
            <param name="blength"></param>
            <returns></returns>
        </member>
        <member name="M:Easytl.THelper.Str_GetContent(System.String,System.String,System.String)">
            <summary>
            获取两段字符中间的字符串
            </summary>
            <param name="b">字符串</param>
            <param name="ContentStart">开始字符</param>
            <param name="ContentEnd">截止字符</param>
            <returns></returns>
        </member>
        <member name="M:Easytl.THelper.GetCRC(System.String)">
            <summary>
            获取CRC校验码
            </summary>
        </member>
        <member name="M:Easytl.THelper.Str16_To_Str2(System.String)">
            <summary>
            16进制字符串转换为2进制字符串
            </summary>
            <param name="Str16">16进制字符串</param>
        </member>
        <member name="M:Easytl.THelper.Str16_To_Bytes(System.String)">
            <summary>
            16进制字符串转换为10进制字节数组
            </summary>
            <param name="Str16">16进制字符串</param>
        </member>
        <member name="M:Easytl.THelper.Str2_To_Str16(System.String)">
            <summary>
            2进制字符串转换为16进制字符串
            </summary>
            <param name="Str2">2进制字符串</param>
        </member>
        <member name="M:Easytl.THelper.StrReverse(System.String,System.Int32)">
            <summary>
            反转字符串
            </summary>
            <param name="Str">要反转的字符串</param>
            <param name="ReverseNum">反转时的字符串个数</param>
        </member>
        <member name="M:Easytl.THelper.WeekEnToCh(System.DayOfWeek)">
            <summary>
            日期转换
            </summary>
            <param name="week"></param>
            <returns></returns>
        </member>
        <member name="M:Easytl.THelper.GetModel``2(``0)">
            <summary>
            将类的相同属性值赋予其他类
            </summary>
        </member>
        <member name="M:Easytl.THelper.GetList``2(System.Collections.Generic.List{``0})">
            <summary>
            将类的相同属性值赋予其他类
            </summary>
        </member>
        <member name="M:Easytl.THelper.IntToIPAdress(System.Int32)">
            <summary>
            将整形转为IP地址
            </summary>
        </member>
        <member name="M:Easytl.THelper.IPAdressToInt(System.String)">
            <summary>
            将IP地址转为整形
            </summary>
        </member>
        <member name="M:Easytl.THelper.GetHostIPv4">
            <summary>
            获取本地IPv4地址
            </summary>
        </member>
        <member name="M:Easytl.THelper.GetTimestamp(System.Boolean,System.String)">
            <summary>
            获取时间戳
            </summary>
        </member>
        <member name="M:Easytl.THelper.GetConnectionStrings(System.String)">
            <summary>
            获取ConnectionStrings连接字符串
            </summary>
        </member>
        <member name="M:Easytl.THelper.SetConnectionString(System.String,System.String)">
            <summary>
            设置ConnectionString连接字符串
            </summary>
        </member>
        <member name="M:Easytl.THelper.SetConnectionString(System.String,System.String,System.String)">
            <summary>
            设置ConnectionString连接字符串
            </summary>
        </member>
        <member name="M:Easytl.THelper.GetAppSettingValue(System.String)">
            <summary>
            获取AppSetting配置字符串
            </summary>
        </member>
        <member name="M:Easytl.THelper.SetAppSettingValue(System.String,System.String)">
            <summary>
            设置AppSetting配置字符串
            </summary>
        </member>
        <member name="M:Easytl.CustomClass.BaseForm.ShowForm">
            <summary>
            显示窗体
            </summary>
        </member>
        <member name="M:Easytl.CustomClass.BaseForm.ShowForm(System.Windows.Forms.IWin32Window)">
            <summary>
            显示窗体
            </summary>
            <param name="owner">窗体拥有者</param>
        </member>
        <member name="M:Easytl.CustomClass.BaseForm.OnLoad(System.EventArgs)">
            <summary>
            窗体加载
            </summary>
        </member>
        <member name="T:Easytl.CustomClass.ListItem">
            <summary>
            选择项类，用于ComboBox或者ListBox添加项
            </summary>
        </member>
        <member name="T:Easytl.CustomControllers.CustomController.DataGridViewCheckBoxColumn_MultiSelect">
            <summary>
            可全选列
            </summary>
        </member>
        <member name="P:Easytl.CustomControllers.CustomController.DataGridViewCheckBoxColumn_MultiSelect.Checked_ALL">
            <summary>
            是否全选
            </summary>
        </member>
        <member name="P:Easytl.CustomControllers.CustomController.DataGridViewCheckBoxColumn_MultiSelect.Checked_Count">
            <summary>
            当前选中的行数
            </summary>
        </member>
        <member name="T:Easytl.CustomControllers.CustomController.DataGridViewCheckBoxColumn_OneSelect">
            <summary>
            单选列
            </summary>
        </member>
        <member name="P:Easytl.CustomControllers.CustomController.DataGridViewCheckBoxColumn_OneSelect.Select_One">
            <summary>
            当前单选项
            </summary>
        </member>
        <member name="T:Easytl.CustomControllers.CustomController.DataGridViewTextBoxColumn_UnionCombox">
            <summary>
            文本框和下拉列表组合列
            </summary>
        </member>
        <member name="P:Easytl.CustomControllers.CustomController.DataGridViewTextBoxColumn_UnionCombox.ComboxItems">
            <summary>
            下拉列表项集合
            </summary>
        </member>
        <member name="F:Easytl.CustomControllers.CustomController.DataGridViewTextBoxColumn_UnionCombox.OldItem">
            <summary>
            单元格原始值
            </summary>
        </member>
        <member name="F:Easytl.CustomControllers.CustomController.DataGridViewTextBoxColumn_UnionCombox.EditeCellEvent">
            <summary>
            要编辑的单元格事件类
            </summary>
        </member>
        <member name="F:Easytl.CustomControllers.CustomController.DataGridViewTextBoxColumn_UnionCombox.EndEditCell">
            <summary>
            是否正在结束编辑
            </summary>
        </member>
        <member name="F:Easytl.CustomControllers.CustomController.DataGridViewTextBoxColumn_UnionCombox.Cell_Value">
            <summary>
            复制后的值
            </summary>
        </member>
        <member name="F:Easytl.CustomControllers.CustomController.DataGridViewTextBoxColumn_UnionCombox.Cell_LS_Value">
            <summary>
            临时的值
            </summary>
        </member>
        <member name="T:Easytl.CustomControllers.CustomController.DataGridViewTextBoxColumn_XH">
            <summary>
            序号列
            </summary>
        </member>
        <member name="P:Easytl.CustomControllers.CustomController.My_DataGridView.EditHeadShow">
            <summary>
            是否可右击列头显示隐藏列
            </summary>
        </member>
        <member name="E:Easytl.CustomControllers.CustomController.My_DataGridView.OnTextUnionCombox_CellEndEdit">
            <summary>
            当DataGridViewTextBoxColumn_UnionCombox列中单元格结束编辑时引发事件
            </summary>
        </member>
        <member name="F:Easytl.CustomControllers.CustomController.My_PictureBox._loadphoto_nownum">
            <summary>
            加载图片的当前次数
            </summary>
        </member>
        <member name="F:Easytl.CustomControllers.CustomController.My_PictureBox._loadphoto_num">
            <summary>
            加载图片的次数
            </summary>
        </member>
        <member name="P:Easytl.CustomControllers.CustomController.My_PictureBox.LoadPhoto_Num">
            <summary>
            加载图片的次数
            </summary>
        </member>
        <member name="P:Easytl.CustomControllers.CustomController.My_PictureBox.ShowMaxPhoto">
            <summary>
            点击是否弹出大图
            </summary>
        </member>
        <member name="P:Easytl.CustomControllers.CustomController.My_PictureBox.MaxPhotoWidth">
            <summary>
            大图的宽度
            </summary>
        </member>
        <member name="P:Easytl.CustomControllers.CustomController.My_PictureBox.MaxPhotoHeight">
            <summary>
            大图的高度
            </summary>
        </member>
        <member name="P:Easytl.CustomControllers.CustomController.My_PictureBox.ShowContextMenuStrip">
            <summary>
            右击是否选择或取消图片
            </summary>
        </member>
        <member name="P:Easytl.CustomControllers.CustomController.My_PictureBox.DefaultImage">
            <summary>
            默认图片
            </summary>
        </member>
        <member name="F:Easytl.CustomControllers.CustomController.My_PictureBox.Timer_LoadPhoto">
            <summary>
            定时加载图片控件
            </summary>
        </member>
        <member name="F:Easytl.CustomControllers.CustomController.My_PictureBox.PhotoBox_Show">
            <summary>
            单击弹出的大图窗口
            </summary>
        </member>
        <member name="F:Easytl.CustomControllers.CustomController.My_PictureBox.ContextMenuStrip_Show">
            <summary>
            右击弹出的选择或取消图片窗口
            </summary>
        </member>
        <member name="F:Easytl.CustomControllers.CustomController.My_PictureBox.OpenFileDialog_Show">
            <summary>
            选择图片时的打开文件窗口
            </summary>
        </member>
        <member name="M:Easytl.CustomControllers.CustomController.My_PictureBox.#ctor">
            <summary>
            实例化
            </summary>
        </member>
        <member name="M:Easytl.CustomControllers.CustomController.My_PictureBox.LoadImageByNum(System.String)">
            <summary>
            按规定次数加载图片
            </summary>
        </member>
        <member name="M:Easytl.CustomControllers.CustomController.My_PictureBox.ClearImage">
            <summary>
            清除图片显示
            </summary>
        </member>
        <member name="M:Easytl.CustomControllers.CustomController.My_PictureBox.Timer_LoadPhoto_Tick(System.Object,System.EventArgs)">
            <summary>
            按时加载图片
            </summary>
        </member>
        <member name="M:Easytl.CustomControllers.CustomController.My_PictureBox.OnMouseClick(System.Windows.Forms.MouseEventArgs)">
            <summary>
            点击图片时
            </summary>
        </member>
        <member name="M:Easytl.CustomControllers.CustomController.My_PictureBox.ContextMenuStrip_Show_ItemClicked(System.Object,System.Windows.Forms.ToolStripItemClickedEventArgs)">
            <summary>
            点击快捷菜单时
            </summary>
        </member>
        <member name="P:Easytl.CustomControllers.CustomController.My_TextBox.SelectItem">
            <summary>
            当前项值
            </summary>
        </member>
        <member name="P:Easytl.CustomControllers.CustomController.My_TextBox.OnlyNumber">
            <summary>
            是否只能输入数字
            </summary>
        </member>
        <member name="P:Easytl.CustomControllers.CustomController.My_TextBox.AllowPoint">
            <summary>
            是否允许小数点
            </summary>
        </member>
        <member name="T:Easytl.CustomControllers.CustomController.My_TreeView.tNodeChecked">
            <summary>
            节点选中类型
            </summary>
        </member>
        <member name="F:Easytl.CustomControllers.CustomController.My_TreeView.tNodeChecked.tNoChecked">
            <summary>
            未选中
            </summary>
        </member>
        <member name="F:Easytl.CustomControllers.CustomController.My_TreeView.tNodeChecked.tChecked">
            <summary>
            选中
            </summary>
        </member>
        <member name="F:Easytl.CustomControllers.CustomController.My_TreeView.tNodeChecked.tChildChecked">
            <summary>
            子节点选中
            </summary>
        </member>
        <member name="P:Easytl.CustomControllers.CustomController.My_TreeView.ShowCheckBox">
            <summary>
            是否显示CheckBox框
            </summary>
        </member>
        <member name="P:Easytl.CustomControllers.CustomController.My_TreeView.ClickDisenable">
            <summary>
            启用点击是否有效
            </summary>
        </member>
        <member name="E:Easytl.CustomControllers.CustomController.My_TreeView.OnNodeCheckAfter">
            <summary>
            节点选中选中状态改变事件
            </summary>
        </member>
        <member name="E:Easytl.CustomControllers.CustomController.My_TreeView.OnNodeMouseClickAfter">
            <summary>
            节点鼠标点击后事件
            </summary>
        </member>
        <member name="M:Easytl.CustomControllers.CustomController.My_TreeView.SetNodeImg11(System.Windows.Forms.TreeNode)">
            <summary>
            设置节点选定状态：规则.1：检查是否有子节点，需清除所有子节点的选定状态； 
            </summary>
            <param name="tn"></param>  
        </member>
        <member name="M:Easytl.CustomControllers.CustomController.My_TreeView.SetNodeImg12(System.Windows.Forms.TreeNode)">
            <summary>
            设置节点选定状态：规则.2：检查是否有父节点，如有，则根据兄弟节点的选定状态修改父节点的选定状态
            </summary>
            <param name="tn"></param>  
        </member>
        <member name="M:Easytl.CustomControllers.CustomController.My_TreeView.SetNodeImg21(System.Windows.Forms.TreeNode)">
            <summary>
            设置节点选定状态：规则.1：检查是否有子节点，设置所有子节点为选定状态
            </summary>
            <param name="tn"></param>  
        </member>
        <member name="M:Easytl.CustomControllers.CustomController.My_TreeView.SetNodeImg22(System.Windows.Forms.TreeNode)">
            <summary>
            设置节点选定状态：规则.2：检查是否有父节点，如有，则根据兄弟节点的选定状态修改父节点的选定状态
            </summary>
            <param name="tn"></param>
        </member>
        <member name="M:Easytl.CustomControllers.CustomController.My_TreeView.SetNodeChecked(System.Windows.Forms.TreeNode,System.Boolean)">
            <summary>
            设置节点选中状态
            </summary>
            <param name="node"></param>
            <param name="IsCheck"></param>
        </member>
        <member name="M:Easytl.CustomControllers.CustomController.My_TreeView.SetCheck_BindData(System.String[])">
            <summary>
            TreeView绑定字符串组以更改节点的选中状态
            </summary>
            <param name="OPFunctionList">字符串组</param>
        </member>
        <member name="M:Easytl.CustomControllers.CustomController.My_TreeView.GetCheckedNodeText(System.Collections.Generic.List{System.String}@,System.Object)">
            <summary>
            获取选中节点的文本值
            </summary>
            <param name="TreeSelectItemsTextList"></param>
            <param name="obj"></param>
        </member>
        <member name="M:Easytl.CustomControllers.CustomController.My_TreeView.GetCheckedNodeName(System.Collections.Generic.List{System.String}@,System.Object)">
            <summary>
            获取选中节点的名称的列表
            </summary>
            <param name="TreeSelectItemsNameList"></param>
            <param name="obj"></param>
        </member>
        <member name="M:Easytl.CustomControllers.CustomController.My_TreeView.GetCheckedNodeName(System.String@,System.Object)">
            <summary>
            获取选中节点名称的字符串值
            </summary>
            <returns></returns>
        </member>
        <member name="M:Easytl.CustomControllers.CustomController.My_TreeView.GetNodeCheckState(System.Windows.Forms.TreeNode)">
            <summary>
            获取节点选中状态
            </summary>
            <param name="node">节点</param>
        </member>
        <member name="T:Easytl.CustomControllers.CustomController.NodeCheckAfterEventArgs">
            <summary>
            节点选中事件
            </summary>
        </member>
        <member name="P:Easytl.CustomControllers.CustomController.NodeCheckAfterEventArgs.Node">
            <summary>
            触发的节点
            </summary>
        </member>
        <member name="P:Easytl.CustomControllers.CustomController.NodeCheckAfterEventArgs.NodeChecked">
            <summary>
            节点的选中状态
            </summary>
        </member>
        <member name="M:Easytl.CustomControllers.CustomForm.DataProNameShowBind.GetInstance(Easytl.CustomControllers.CustomController.My_DataGridView,System.Boolean)">
            <summary>
            创建DataProNameShowBind实例
            </summary>
            <returns></returns>
        </member>
        <member name="F:Easytl.CustomControllers.CustomForm.DataProNameShowBind.components">
            <summary>
            必需的设计器变量。
            </summary>
        </member>
        <member name="M:Easytl.CustomControllers.CustomForm.DataProNameShowBind.Dispose(System.Boolean)">
            <summary>
            清理所有正在使用的资源。
            </summary>
            <param name="disposing">如果应释放托管资源，为 true；否则为 false。</param>
        </member>
        <member name="M:Easytl.CustomControllers.CustomForm.DataProNameShowBind.InitializeComponent">
            <summary>
            设计器支持所需的方法 - 不要
            使用代码编辑器修改此方法的内容。
            </summary>
        </member>
        <member name="P:Easytl.CustomControllers.CustomForm.IPTextBox.UseAsIP">
            <summary>
            是否作为IP使用
            </summary>
        </member>
        <member name="M:Easytl.CustomControllers.CustomForm.IPTextBox.Text_IPByte_OnKeyPress(System.Object,System.Windows.Forms.KeyPressEventArgs)">
            <summary>
            检验输入格式
            </summary>
        </member>
        <member name="F:Easytl.CustomControllers.CustomForm.IPTextBox.components">
            <summary> 
            必需的设计器变量。
            </summary>
        </member>
        <member name="M:Easytl.CustomControllers.CustomForm.IPTextBox.Dispose(System.Boolean)">
            <summary> 
            清理所有正在使用的资源。
            </summary>
            <param name="disposing">如果应释放托管资源，为 true；否则为 false。</param>
        </member>
        <member name="M:Easytl.CustomControllers.CustomForm.IPTextBox.InitializeComponent">
            <summary> 
            设计器支持所需的方法 - 不要
            使用代码编辑器修改此方法的内容。
            </summary>
        </member>
        <member name="F:Easytl.CustomControllers.CustomForm.MsgBox.CloseFormTime">
            <summary>
            定时关闭时长
            </summary>
        </member>
        <member name="M:Easytl.CustomControllers.CustomForm.MsgBox.MsgBox_Load(System.Object,System.EventArgs)">
            <summary>
            窗口加载
            </summary>
        </member>
        <member name="M:Easytl.CustomControllers.CustomForm.MsgBox.Show(System.String,System.String,System.Windows.Forms.MessageBoxButtons,System.Windows.Forms.MessageBoxIcon,System.Int32)">
            <summary>
            显示消息框
            </summary>
        </member>
        <member name="M:Easytl.CustomControllers.CustomForm.MsgBox.Show(System.Windows.Forms.IWin32Window,System.String,System.String,System.Windows.Forms.MessageBoxButtons,System.Windows.Forms.MessageBoxIcon,System.Int32)">
            <summary>
            显示消息框
            </summary>
        </member>
        <member name="M:Easytl.CustomControllers.CustomForm.MsgBox.ShowDialog(System.String,System.String,System.Windows.Forms.MessageBoxButtons,System.Windows.Forms.MessageBoxIcon,System.Int32)">
            <summary>
            显示消息框
            </summary>
        </member>
        <member name="M:Easytl.CustomControllers.CustomForm.MsgBox.ShowDialog(System.Windows.Forms.IWin32Window,System.String,System.String,System.Windows.Forms.MessageBoxButtons,System.Windows.Forms.MessageBoxIcon,System.Int32)">
            <summary>
            显示消息框
            </summary>
        </member>
        <member name="M:Easytl.CustomControllers.CustomForm.MsgBox.lb_MsgShow_SizeChanged(System.Object,System.EventArgs)">
            <summary>
            改变文本大小时
            </summary>
        </member>
        <member name="M:Easytl.CustomControllers.CustomForm.MsgBox.Btn_Accept_Click(System.Object,System.EventArgs)">
            <summary>
            点击确定关闭窗口
            </summary>
        </member>
        <member name="M:Easytl.CustomControllers.CustomForm.MsgBox.Timer_CloseForm_Tick(System.Object,System.EventArgs)">
            <summary>
            定时关闭窗口
            </summary>
        </member>
        <member name="F:Easytl.CustomControllers.CustomForm.MsgBox.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Easytl.CustomControllers.CustomForm.MsgBox.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Easytl.CustomControllers.CustomForm.MsgBox.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:Easytl.CustomControllers.CustomForm.PhotoBox.BackgroundImageLocation">
            <summary>
            背景图片的路径
            </summary>
        </member>
        <member name="F:Easytl.CustomControllers.CustomForm.PhotoBox.PhotoBox_Location">
            <summary>
            位移坐标
            </summary>
        </member>
        <member name="M:Easytl.CustomControllers.CustomForm.PhotoBox.#ctor">
            <summary>
            实例化窗口
            </summary>
        </member>
        <member name="M:Easytl.CustomControllers.CustomForm.PhotoBox.PhotoBox_MouseDoubleClick(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            关闭图片窗口
            </summary>
        </member>
        <member name="F:Easytl.CustomControllers.CustomForm.PhotoBox.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Easytl.CustomControllers.CustomForm.PhotoBox.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Easytl.CustomControllers.CustomForm.PhotoBox.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:Easytl.PayHelper.WeiXinHelper.appid">
            <summary>
            应用ID
            </summary>
        </member>
        <member name="F:Easytl.PayHelper.WeiXinHelper.mch_id">
            <summary>
            商户号
            </summary>
        </member>
        <member name="F:Easytl.PayHelper.WeiXinHelper.device_info">
            <summary>
            设备号
            </summary>
        </member>
        <member name="F:Easytl.PayHelper.WeiXinHelper.APIKey">
            <summary>
            API密钥
            </summary>
        </member>
        <member name="M:Easytl.PayHelper.WeiXinHelper.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            实例化
            </summary>
            <param name="appid">应用ID</param>
            <param name="mch_id">商户号</param>
            <param name="device_info">设备号</param>
            <param name="APIKey">API密钥</param>
        </member>
        <member name="M:Easytl.PayHelper.WeiXinHelper.GetSign``1(``0)">
            <summary>
            获取签名
            </summary>
        </member>
        <member name="M:Easytl.PayHelper.WeiXinHelper.WeiXinFunc``2(System.String,``1)">
            <summary>
            调用微信接口
            </summary>
        </member>
        <member name="M:Easytl.PayHelper.WeiXinHelper.unifiedorder(Easytl.PayHelper.WeiXin.WXP_unifiedorder)">
            <summary>
            统一下单
            </summary>
        </member>
        <member name="M:Easytl.PayHelper.WeiXinHelper.paynotify(System.String,Easytl.PayHelper.WeiXin.WXReturn@)">
            <summary>
            支付结果通知
            </summary>
        </member>
        <member name="M:Easytl.PayHelper.WeiXinHelper.orderquery(Easytl.PayHelper.WeiXin.WXP_orderquery)">
            <summary>
            查询订单
            </summary>
        </member>
        <member name="T:Easytl.PayHelper.WeiXin.WXConvert">
            <summary>
            微信基础转换类
            </summary>
        </member>
        <member name="F:Easytl.PayHelper.WeiXin.WXConvert.WXReturnPattern">
            <summary>
            返回结果取值格式{1}为占位符，代表数据
            </summary>
        </member>
        <member name="M:Easytl.PayHelper.WeiXin.WXConvert.ToXmlString``1(``0,System.Boolean)">
            <summary>
            微信类转化为微信xml格式字符串
            </summary>
            <param name="Tmodel">要转化的微信类</param>
            <param name="CDATA">是否加入CDATA保护</param>
        </member>
        <member name="M:Easytl.PayHelper.WeiXin.WXConvert.GetWXObject``1(System.String)">
            <summary>
            微信xml格式字符串转化为微信类
            </summary>
        </member>
        <member name="T:Easytl.PayHelper.WeiXin.WXPara">
            <summary>
            参数基类
            </summary>
        </member>
        <member name="P:Easytl.PayHelper.WeiXin.WXPara.appid">
            <summary>
            应用ID
            </summary>
        </member>
        <member name="P:Easytl.PayHelper.WeiXin.WXPara.mch_id">
            <summary>
            商户号
            </summary>
        </member>
        <member name="P:Easytl.PayHelper.WeiXin.WXPara.device_info">
            <summary>
            设备号
            </summary>
        </member>
        <member name="P:Easytl.PayHelper.WeiXin.WXPara.nonce_str">
            <summary>
            随机字符串
            </summary>
        </member>
        <member name="P:Easytl.PayHelper.WeiXin.WXPara.sign">
            <summary>
            签名
            </summary>
        </member>
        <member name="P:Easytl.PayHelper.WeiXin.WXPara.sign_type">
            <summary>
            签名类型
            </summary>
        </member>
        <member name="T:Easytl.PayHelper.WeiXin.WXP_apprequest">
            <summary>
            APP支付请求类
            </summary>
        </member>
        <member name="P:Easytl.PayHelper.WeiXin.WXP_apprequest.appid">
            <summary>
            应用ID
            </summary>
        </member>
        <member name="P:Easytl.PayHelper.WeiXin.WXP_apprequest.partnerid">
            <summary>
            商户号
            </summary>
        </member>
        <member name="P:Easytl.PayHelper.WeiXin.WXP_apprequest.prepayid">
            <summary>
            预支付交易会话ID
            </summary>
        </member>
        <member name="P:Easytl.PayHelper.WeiXin.WXP_apprequest.package">
            <summary>
            扩展字段
            </summary>
        </member>
        <member name="P:Easytl.PayHelper.WeiXin.WXP_apprequest.noncestr">
            <summary>
            随机字符串
            </summary>
        </member>
        <member name="P:Easytl.PayHelper.WeiXin.WXP_apprequest.timestamp">
            <summary>
            时间戳
            </summary>
        </member>
        <member name="P:Easytl.PayHelper.WeiXin.WXP_apprequest.sign">
            <summary>
            签名
            </summary>
        </member>
        <member name="P:Easytl.PayHelper.WeiXin.WXP_orderquery.transaction_id">
            <summary>
            微信订单号
            </summary>
        </member>
        <member name="P:Easytl.PayHelper.WeiXin.WXP_orderquery.out_trade_no">
            <summary>
            商户订单号
            </summary>
        </member>
        <member name="T:Easytl.PayHelper.WeiXin.WXReturn">
            <summary>
            返回基类
            </summary>
        </member>
        <member name="P:Easytl.PayHelper.WeiXin.WXReturn.return_code">
            <summary>
            返回状态码
            </summary>
        </member>
        <member name="P:Easytl.PayHelper.WeiXin.WXReturn.return_msg">
            <summary>
            返回信息
            </summary>
        </member>
        <member name="P:Easytl.PayHelper.WeiXin.WXReturn.return_code_enum">
            <summary>
            返回状态码（枚举）
            </summary>
        </member>
        <member name="T:Easytl.PayHelper.WeiXin.WXReturn.ReturnCode">
            <summary>
            返回码
            </summary>
        </member>
        <member name="F:Easytl.PayHelper.WeiXin.WXReturn.ReturnCode.SUCCESS">
            <summary>
            成功
            </summary>
        </member>
        <member name="F:Easytl.PayHelper.WeiXin.WXReturn.ReturnCode.FAIL">
            <summary>
            失败
            </summary>
        </member>
        <member name="F:Easytl.PayHelper.WeiXin.WXReturn.ReturnCode.NOAUTH">
            <summary>
            商户无此接口权限
            </summary>
        </member>
        <member name="F:Easytl.PayHelper.WeiXin.WXReturn.ReturnCode.NOTENOUGH">
            <summary>
            余额不足
            </summary>
        </member>
        <member name="F:Easytl.PayHelper.WeiXin.WXReturn.ReturnCode.ORDERPAID">
            <summary>
            商户订单已支付
            </summary>
        </member>
        <member name="F:Easytl.PayHelper.WeiXin.WXReturn.ReturnCode.ORDERCLOSED">
            <summary>
            订单已关闭
            </summary>
        </member>
        <member name="F:Easytl.PayHelper.WeiXin.WXReturn.ReturnCode.SYSTEMERROR">
            <summary>
            系统错误
            </summary>
        </member>
        <member name="F:Easytl.PayHelper.WeiXin.WXReturn.ReturnCode.APPID_NOT_EXIST">
            <summary>
            APPID不存在
            </summary>
        </member>
        <member name="F:Easytl.PayHelper.WeiXin.WXReturn.ReturnCode.MCHID_NOT_EXIST">
            <summary>
            MCHID不存在
            </summary>
        </member>
        <member name="F:Easytl.PayHelper.WeiXin.WXReturn.ReturnCode.APPID_MCHID_NOT_MATCH">
            <summary>
            appid和mch_id不匹配
            </summary>
        </member>
        <member name="F:Easytl.PayHelper.WeiXin.WXReturn.ReturnCode.LACK_PARAMS">
            <summary>
            缺少参数
            </summary>
        </member>
        <member name="F:Easytl.PayHelper.WeiXin.WXReturn.ReturnCode.OUT_TRADE_NO_USED">
            <summary>
            商户订单号重复
            </summary>
        </member>
        <member name="F:Easytl.PayHelper.WeiXin.WXReturn.ReturnCode.SIGNERROR">
            <summary>
            签名错误
            </summary>
        </member>
        <member name="F:Easytl.PayHelper.WeiXin.WXReturn.ReturnCode.XML_FORMAT_ERROR">
            <summary>
            XML格式错误
            </summary>
        </member>
        <member name="F:Easytl.PayHelper.WeiXin.WXReturn.ReturnCode.REQUIRE_POST_METHOD">
            <summary>
            请使用post方法
            </summary>
        </member>
        <member name="F:Easytl.PayHelper.WeiXin.WXReturn.ReturnCode.POST_DATA_EMPTY">
            <summary>
            post数据为空
            </summary>
        </member>
        <member name="F:Easytl.PayHelper.WeiXin.WXReturn.ReturnCode.ORDERNOTEXIST">
            <summary>
            此交易订单号不存在
            </summary>
        </member>
        <member name="T:Easytl.PayHelper.WeiXin.WXReturn_Success">
            <summary>
            返回成功基类
            </summary>
        </member>
        <member name="P:Easytl.PayHelper.WeiXin.WXReturn_Success.appid">
            <summary>
            应用APPID
            </summary>
        </member>
        <member name="P:Easytl.PayHelper.WeiXin.WXReturn_Success.mch_id">
            <summary>
            商户号
            </summary>
        </member>
        <member name="P:Easytl.PayHelper.WeiXin.WXReturn_Success.device_info">
            <summary>
            设备号
            </summary>
        </member>
        <member name="P:Easytl.PayHelper.WeiXin.WXReturn_Success.nonce_str">
            <summary>
            随机字符串
            </summary>
        </member>
        <member name="P:Easytl.PayHelper.WeiXin.WXReturn_Success.sign">
            <summary>
            签名
            </summary>
        </member>
        <member name="P:Easytl.PayHelper.WeiXin.WXReturn_Success.result_code">
            <summary>
            业务结果
            </summary>
        </member>
        <member name="P:Easytl.PayHelper.WeiXin.WXReturn_Success.result_code_enum">
            <summary>
            业务结果（枚举）
            </summary>
        </member>
        <member name="P:Easytl.PayHelper.WeiXin.WXReturn_Success.err_code">
            <summary>
            错误代码
            </summary>
        </member>
        <member name="P:Easytl.PayHelper.WeiXin.WXReturn_Success.err_code_enum">
            <summary>
            错误代码（枚举）
            </summary>
        </member>
        <member name="P:Easytl.PayHelper.WeiXin.WXReturn_Success.err_code_des">
            <summary>
            错误代码描述
            </summary>
        </member>
        <member name="T:Easytl.PayHelper.WeiXin.WXP_unifiedorder">
            <summary>
            参数类--统一下单
            </summary>
        </member>
        <member name="P:Easytl.PayHelper.WeiXin.WXP_unifiedorder.body">
            <summary>
            商品描述
            </summary>
        </member>
        <member name="P:Easytl.PayHelper.WeiXin.WXP_unifiedorder.detail">
            <summary>
            商品详情
            </summary>
        </member>
        <member name="P:Easytl.PayHelper.WeiXin.WXP_unifiedorder.attach">
            <summary>
            附加数据
            </summary>
        </member>
        <member name="P:Easytl.PayHelper.WeiXin.WXP_unifiedorder.out_trade_no">
            <summary>
            商户订单号
            </summary>
        </member>
        <member name="P:Easytl.PayHelper.WeiXin.WXP_unifiedorder.fee_type">
            <summary>
            货币类型
            </summary>
        </member>
        <member name="P:Easytl.PayHelper.WeiXin.WXP_unifiedorder.total_fee">
            <summary>
            总金额
            </summary>
        </member>
        <member name="P:Easytl.PayHelper.WeiXin.WXP_unifiedorder.spbill_create_ip">
            <summary>
            终端IP
            </summary>
        </member>
        <member name="P:Easytl.PayHelper.WeiXin.WXP_unifiedorder.time_start">
            <summary>
            交易起始时间
            </summary>
        </member>
        <member name="P:Easytl.PayHelper.WeiXin.WXP_unifiedorder.time_expire">
            <summary>
            交易结束时间
            </summary>
        </member>
        <member name="P:Easytl.PayHelper.WeiXin.WXP_unifiedorder.goods_tag">
            <summary>
            商品标记
            </summary>
        </member>
        <member name="P:Easytl.PayHelper.WeiXin.WXP_unifiedorder.notify_url">
            <summary>
            通知地址
            </summary>
        </member>
        <member name="P:Easytl.PayHelper.WeiXin.WXP_unifiedorder.trade_type">
            <summary>
            交易类型
            </summary>
        </member>
        <member name="P:Easytl.PayHelper.WeiXin.WXP_unifiedorder.limit_pay">
            <summary>
            指定支付方式
            </summary>
        </member>
        <member name="P:Easytl.PayHelper.WeiXin.WXR_orderquery.openid">
            <summary>
            用户标识
            </summary>
        </member>
        <member name="P:Easytl.PayHelper.WeiXin.WXR_orderquery.is_subscribe">
            <summary>
            是否关注公众账号 
            </summary>
        </member>
        <member name="P:Easytl.PayHelper.WeiXin.WXR_orderquery.trade_type">
            <summary>
            交易类型 
            </summary>
        </member>
        <member name="P:Easytl.PayHelper.WeiXin.WXR_orderquery.trade_state">
            <summary>
            交易状态 
            </summary>
        </member>
        <member name="P:Easytl.PayHelper.WeiXin.WXR_orderquery.bank_type">
            <summary>
            付款银行 
            </summary>
        </member>
        <member name="P:Easytl.PayHelper.WeiXin.WXR_orderquery.total_fee">
            <summary>
            总金额 
            </summary>
        </member>
        <member name="P:Easytl.PayHelper.WeiXin.WXR_orderquery.fee_type">
            <summary>
            货币种类 
            </summary>
        </member>
        <member name="P:Easytl.PayHelper.WeiXin.WXR_orderquery.cash_fee">
            <summary>
            现金支付金额 
            </summary>
        </member>
        <member name="P:Easytl.PayHelper.WeiXin.WXR_orderquery.cash_fee_type">
            <summary>
            现金支付货币类型  
            </summary>
        </member>
        <member name="P:Easytl.PayHelper.WeiXin.WXR_orderquery.coupon_fee">
            <summary>
            代金券金额  
            </summary>
        </member>
        <member name="P:Easytl.PayHelper.WeiXin.WXR_orderquery.coupon_count">
            <summary>
            代金券使用数量  
            </summary>
        </member>
        <member name="P:Easytl.PayHelper.WeiXin.WXR_orderquery.coupon_id_n">
            <summary>
            代金券ID   
            </summary>
        </member>
        <member name="P:Easytl.PayHelper.WeiXin.WXR_orderquery.coupon_fee_n">
            <summary>
            单个代金券支付金额   
            </summary>
        </member>
        <member name="P:Easytl.PayHelper.WeiXin.WXR_orderquery.transaction_id">
            <summary>
            微信支付订单号   
            </summary>
        </member>
        <member name="P:Easytl.PayHelper.WeiXin.WXR_orderquery.out_trade_no">
            <summary>
            商户订单号    
            </summary>
        </member>
        <member name="P:Easytl.PayHelper.WeiXin.WXR_orderquery.attach">
            <summary>
            附加数据   
            </summary>
        </member>
        <member name="P:Easytl.PayHelper.WeiXin.WXR_orderquery.time_end">
            <summary>
            支付完成时间    
            </summary>
        </member>
        <member name="P:Easytl.PayHelper.WeiXin.WXR_orderquery.trade_state_desc">
            <summary>
            交易状态描述    
            </summary>
        </member>
        <member name="T:Easytl.PayHelper.WeiXin.WXR_paynotify">
            <summary>
            返回类--支付结果通知
            </summary>
        </member>
        <member name="P:Easytl.PayHelper.WeiXin.WXR_paynotify.openid">
            <summary>
            用户标识
            </summary>
        </member>
        <member name="P:Easytl.PayHelper.WeiXin.WXR_paynotify.is_subscribe">
            <summary>
            是否关注公众账号
            </summary>
        </member>
        <member name="P:Easytl.PayHelper.WeiXin.WXR_paynotify.trade_type">
            <summary>
            交易类型
            </summary>
        </member>
        <member name="P:Easytl.PayHelper.WeiXin.WXR_paynotify.bank_type">
            <summary>
            付款银行
            </summary>
        </member>
        <member name="P:Easytl.PayHelper.WeiXin.WXR_paynotify.total_fee">
            <summary>
            总金额
            </summary>
        </member>
        <member name="P:Easytl.PayHelper.WeiXin.WXR_paynotify.fee_type">
            <summary>
            货币种类
            </summary>
        </member>
        <member name="P:Easytl.PayHelper.WeiXin.WXR_paynotify.cash_fee">
            <summary>
            现金支付金额
            </summary>
        </member>
        <member name="P:Easytl.PayHelper.WeiXin.WXR_paynotify.cash_fee_type">
            <summary>
            现金支付货币类型
            </summary>
        </member>
        <member name="P:Easytl.PayHelper.WeiXin.WXR_paynotify.coupon_fee">
            <summary>
            代金券金额
            </summary>
        </member>
        <member name="P:Easytl.PayHelper.WeiXin.WXR_paynotify.coupon_count">
            <summary>
            代金券使用数量
            </summary>
        </member>
        <member name="P:Easytl.PayHelper.WeiXin.WXR_paynotify.coupon_id_n">
            <summary>
            代金券ID
            </summary>
        </member>
        <member name="P:Easytl.PayHelper.WeiXin.WXR_paynotify.coupon_fee_n">
            <summary>
            单个代金券支付金额
            </summary>
        </member>
        <member name="P:Easytl.PayHelper.WeiXin.WXR_paynotify.transaction_id">
            <summary>
            微信支付订单号
            </summary>
        </member>
        <member name="P:Easytl.PayHelper.WeiXin.WXR_paynotify.out_trade_no">
            <summary>
            商户订单号
            </summary>
        </member>
        <member name="P:Easytl.PayHelper.WeiXin.WXR_paynotify.attach">
            <summary>
            商家数据包
            </summary>
        </member>
        <member name="P:Easytl.PayHelper.WeiXin.WXR_paynotify.time_end">
            <summary>
            支付完成时间
            </summary>
        </member>
        <member name="T:Easytl.PayHelper.WeiXin.WXR_unifiedorder">
            <summary>
            返回类--统一下单
            </summary>
        </member>
        <member name="P:Easytl.PayHelper.WeiXin.WXR_unifiedorder.trade_type">
            <summary>
            交易类型
            </summary>
        </member>
        <member name="P:Easytl.PayHelper.WeiXin.WXR_unifiedorder.prepay_id">
            <summary>
            预支付交易会话标识
            </summary>
        </member>
        <member name="T:Easytl.SafeHelper.BlowFishCryptoServiceProvider">
            <summary>
            BlowFish加密
            </summary>
        </member>
        <member name="M:Easytl.SafeHelper.BlowFishCryptoServiceProvider.#ctor(System.String)">
            <summary>
            Constructor for hex key
            </summary>
            <param name="hexKey">Cipher key as a hex string</param>
        </member>
        <member name="M:Easytl.SafeHelper.BlowFishCryptoServiceProvider.#ctor(System.Byte[])">
            <summary>
            Constructor for byte key
            </summary>
            <param name="cipherKey">Cipher key as a byte array</param>
        </member>
        <member name="M:Easytl.SafeHelper.BlowFishCryptoServiceProvider.Encrypt_CBC(System.String)">
            <summary>
            Encrypts a string in CBC mode
            </summary>
            <param name="pt">Plaintext data to encrypt</param>
            <returns>Ciphertext with IV appended to front</returns>
        </member>
        <member name="M:Easytl.SafeHelper.BlowFishCryptoServiceProvider.Decrypt_CBC(System.String)">
            <summary>
            Decrypts a string in CBC mode
            </summary>
            <param name="ct">Ciphertext with IV appended to front</param>
            <returns>Plaintext</returns>
        </member>
        <member name="M:Easytl.SafeHelper.BlowFishCryptoServiceProvider.Decrypt_CBC(System.Byte[])">
            <summary>
            Decrypts a byte array in CBC mode.
            IV must be created and saved manually.
            </summary>
            <param name="ct">Ciphertext data to decrypt</param>
            <returns>Plaintext</returns>
        </member>
        <member name="M:Easytl.SafeHelper.BlowFishCryptoServiceProvider.Encrypt_CBC(System.Byte[])">
            <summary>
            Encrypts a byte array in CBC mode.
            IV must be created and saved manually.
            </summary>
            <param name="pt">Plaintext data to encrypt</param>
            <returns>Ciphertext</returns>
        </member>
        <member name="M:Easytl.SafeHelper.BlowFishCryptoServiceProvider.Encrypt_ECB(System.String)">
            <summary>
            Encrypt a string in ECB mode
            </summary>
            <param name="pt">Plaintext to encrypt as ascii string</param>
            <returns>hex value of encrypted data</returns>
        </member>
        <member name="M:Easytl.SafeHelper.BlowFishCryptoServiceProvider.Decrypt_ECB(System.String)">
            <summary>
            Decrypts a string (ECB)
            </summary>
            <param name="ct">hHex string of the ciphertext</param>
            <returns>Plaintext ascii string</returns>
        </member>
        <member name="M:Easytl.SafeHelper.BlowFishCryptoServiceProvider.Encrypt_ECB(System.Byte[])">
            <summary>
            Encrypts a byte array in ECB mode
            </summary>
            <param name="pt">Plaintext data</param>
            <returns>Ciphertext bytes</returns>
        </member>
        <member name="M:Easytl.SafeHelper.BlowFishCryptoServiceProvider.Decrypt_ECB(System.Byte[])">
            <summary>
            Decrypts a byte array (ECB)
            </summary>
            <param name="ct">Ciphertext byte array</param>
            <returns>Plaintext</returns>
        </member>
        <member name="P:Easytl.SafeHelper.BlowFishCryptoServiceProvider.IV">
            <summary>
            Initialization vector for CBC mode.
            </summary>
        </member>
        <member name="M:Easytl.SafeHelper.BlowFishCryptoServiceProvider.SetRandomIV">
            <summary>
            Creates and sets a random initialization vector.
            </summary>
            <returns>The random IV</returns>
        </member>
        <member name="M:Easytl.SafeHelper.BlowFishCryptoServiceProvider.SetupKey(System.Byte[])">
            <summary>
            Sets up the S-blocks and the key
            </summary>
            <param name="cipherKey">Block cipher key (1-448 bits)</param>
        </member>
        <member name="M:Easytl.SafeHelper.BlowFishCryptoServiceProvider.Crypt_ECB(System.Byte[],System.Boolean)">
            <summary>
            Encrypts or decrypts data in ECB mode
            </summary>
            <param name="text">plain/ciphertext</param>
            <param name="decrypt">true to decrypt, false to encrypt</param>
            <returns>(En/De)crypted data</returns>
        </member>
        <member name="M:Easytl.SafeHelper.BlowFishCryptoServiceProvider.Crypt_CBC(System.Byte[],System.Boolean)">
            <summary>
            Encrypts or decrypts data in CBC mode
            </summary>
            <param name="text">plain/ciphertext</param>
            <param name="decrypt">true to decrypt, false to encrypt</param>
            <returns>(En/De)crypted data</returns>
        </member>
        <member name="M:Easytl.SafeHelper.BlowFishCryptoServiceProvider.XorBlock(System.Byte[]@,System.Byte[])">
            <summary>
            XoR encrypts two 8 bit blocks
            </summary>
            <param name="block">8 bit block 1</param>
            <param name="iv">8 bit block 2</param>
        </member>
        <member name="M:Easytl.SafeHelper.BlowFishCryptoServiceProvider.BlockEncrypt(System.Byte[]@)">
            <summary>
            Encrypts a 64 bit block
            </summary>
            <param name="block">The 64 bit block to encrypt</param>
        </member>
        <member name="M:Easytl.SafeHelper.BlowFishCryptoServiceProvider.BlockDecrypt(System.Byte[]@)">
            <summary>
            Decrypts a 64 bit block
            </summary>
            <param name="block">The 64 bit block to decrypt</param>
        </member>
        <member name="M:Easytl.SafeHelper.BlowFishCryptoServiceProvider.SetBlock(System.Byte[])">
            <summary>
            Splits the block into the two uint values
            </summary>
            <param name="block">the 64 bit block to setup</param>
        </member>
        <member name="M:Easytl.SafeHelper.BlowFishCryptoServiceProvider.GetBlock(System.Byte[]@)">
            <summary>
            Converts the two uint values into a 64 bit block
            </summary>
            <param name="block">64 bit buffer to receive the block</param>
        </member>
        <member name="M:Easytl.SafeHelper.BlowFishCryptoServiceProvider.encipher">
            <summary>
            Runs the blowfish algorithm (standard 16 rounds)
            </summary>
        </member>
        <member name="M:Easytl.SafeHelper.BlowFishCryptoServiceProvider.decipher">
            <summary>
            Runs the blowfish algorithm in reverse (standard 16 rounds)
            </summary>
        </member>
        <member name="M:Easytl.SafeHelper.BlowFishCryptoServiceProvider.round(System.UInt32,System.UInt32,System.UInt32)">
            <summary>
            one round of the blowfish algorithm
            </summary>
            <param name="a">See spec</param>
            <param name="b">See spec</param>
            <param name="n">See spec</param>
            <returns></returns>
        </member>
        <member name="M:Easytl.SafeHelper.RC4CryptoServiceProvider.EncryptEx(System.Byte[],System.String)">
            <summary>
            加密
            </summary>
        </member>
        <member name="M:Easytl.SafeHelper.RC4CryptoServiceProvider.DecryptEx(System.Byte[],System.String)">
            <summary>
            解密
            </summary>
        </member>
        <member name="M:Easytl.SafeHelper.RC4CryptoServiceProvider.GetKey(System.Byte[],System.Int32)">
            <summary>
            打乱密码
            </summary>
            <param name="pass">密码</param>
            <param name="kLen">密码箱长度</param>
            <returns>打乱后的密码</returns>
        </member>
        <member name="T:Easytl.SafeHelper.CryptoBase">
            <summary>
            加密类基类
            </summary>
        </member>
        <member name="F:Easytl.SafeHelper.CryptoBase.Encode">
            <summary>
            编码转换器，用于字节码和字符串之间的转换，默认为本机编码
            </summary>
        </member>
        <member name="M:Easytl.SafeHelper.CryptoBase.Encrypt(System.String,System.String)">
            <summary>
            带编码模式的字符串加密
            </summary>
            <param name="data">要加密的数据</param>
            <param name="pass">密码</param>
            <param name="em">编码模式</param>
            <returns>加密后经过编码的字符串</returns>
        </member>
        <member name="M:Easytl.SafeHelper.CryptoBase.Decrypt(System.Byte[],System.String)">
            <summary>
            带编码模式的字符串解密
            </summary>
            <param name="data">要解密的数据</param>
            <param name="pass">密码</param>
            <param name="em">编码模式</param>
            <returns>明文</returns>
        </member>
        <member name="M:Easytl.SafeHelper.CryptoBase.EncryptEx(System.Byte[],System.String)">
            <summary>
            加密
            </summary>
            <param name="data">要加密的数据</param>
            <param name="pass">密钥</param>
            <returns>密文</returns>
        </member>
        <member name="M:Easytl.SafeHelper.CryptoBase.DecryptEx(System.Byte[],System.String)">
            <summary>
            解密
            </summary>
            <param name="data">要解密的数据</param>
            <param name="pass">密码</param>
            <returns>明文</returns>
        </member>
        <member name="M:Easytl.SafeHelper.ICrypto.EncryptEx(System.Byte[],System.String)">
            <summary>
            加密
            </summary>
            <param name="data">要加密的数据</param>
            <param name="pass">密钥</param>
            <returns>密文</returns>
        </member>
        <member name="M:Easytl.SafeHelper.ICrypto.DecryptEx(System.Byte[],System.String)">
            <summary>
            解密
            </summary>
            <param name="data">要解密的数据</param>
            <param name="pass">密码</param>
            <returns>明文</returns>
        </member>
        <member name="T:Easytl.SafeHelper.EncryptionHelper">
            <summary>
            各种加密方法类
            </summary>
        </member>
        <member name="T:Easytl.SafeHelper.EncryptionHelper.Encrypt_Type">
            <summary>
            加密类型
            </summary>
        </member>
        <member name="F:Easytl.SafeHelper.EncryptionHelper.Encrypt_Type.DES_Base64">
            <summary>
            【对称算法】DES加密，密钥长度64位
            </summary>
        </member>
        <member name="F:Easytl.SafeHelper.EncryptionHelper.Encrypt_Type.DES_MD5">
            <summary>
            【对称算法】DES加密，密钥长度64位
            </summary>
        </member>
        <member name="F:Easytl.SafeHelper.EncryptionHelper.Encrypt_Type.DES3">
            <summary>
            【对称算法】3DES加密，密钥长度128、192位
            </summary>
        </member>
        <member name="F:Easytl.SafeHelper.EncryptionHelper.Encrypt_Type.AES">
            <summary>
            【对称算法】AES加密，密钥长度128、192、256位
            </summary>
        </member>
        <member name="F:Easytl.SafeHelper.EncryptionHelper.Encrypt_Type.RC2">
            <summary>
            【对称算法】RC2加密，密钥长度64、128位
            </summary>
        </member>
        <member name="F:Easytl.SafeHelper.EncryptionHelper.Encrypt_Type.RC4">
            <summary>
            【对称算法】RC4加密，密钥长度可变
            </summary>
        </member>
        <member name="F:Easytl.SafeHelper.EncryptionHelper.Encrypt_Type.RSA">
            <summary>
            【非对称算法】RAS加密
            </summary>
        </member>
        <member name="F:Easytl.SafeHelper.EncryptionHelper.Encrypt_Type.MD5">
            <summary>
            【散列算法】MD5加密(输出为16进制字符串)
            </summary>
        </member>
        <member name="F:Easytl.SafeHelper.EncryptionHelper.Encrypt_Type.SHA1">
            <summary>
            【散列算法】SHA1加密(输出为16进制字符串)
            </summary>
        </member>
        <member name="F:Easytl.SafeHelper.EncryptionHelper.Encrypt_Type.HMACSHA1">
            <summary>
            【散列算法】HMAC-SHA1加密(输出为16进制字符串)
            </summary>
        </member>
        <member name="T:Easytl.SafeHelper.EncryptionHelper.Encrypt_RPType">
            <summary>
            加密结果或解密参数类型
            </summary>
        </member>
        <member name="F:Easytl.SafeHelper.EncryptionHelper.Encrypt_RPType.Str16">
            <summary>
            输入或输出16进制加密字符串
            </summary>
        </member>
        <member name="F:Easytl.SafeHelper.EncryptionHelper.Encrypt_RPType.Base64">
            <summary>
            输入或输出Base64加密字符串
            </summary>
        </member>
        <member name="M:Easytl.SafeHelper.EncryptionHelper.Encrypt(Easytl.SafeHelper.EncryptionHelper.Encrypt_Type,System.String,System.String,System.String,System.Security.Cryptography.CipherMode,System.Security.Cryptography.PaddingMode,System.Text.Encoding)">
            <summary>
            加密
            </summary>
        </member>
        <member name="M:Easytl.SafeHelper.EncryptionHelper.Encrypt(Easytl.SafeHelper.EncryptionHelper.Encrypt_RPType,Easytl.SafeHelper.EncryptionHelper.Encrypt_Type,System.String,System.String,System.String,System.Security.Cryptography.CipherMode,System.Security.Cryptography.PaddingMode,System.Text.Encoding)">
            <summary>
            加密（输出16进制加密字符串）
            </summary>
        </member>
        <member name="M:Easytl.SafeHelper.EncryptionHelper.Decrypt(Easytl.SafeHelper.EncryptionHelper.Encrypt_Type,System.Byte[],System.String,System.String,System.Security.Cryptography.CipherMode,System.Security.Cryptography.PaddingMode,System.Text.Encoding)">
            <summary>
            解密
            </summary>
        </member>
        <member name="M:Easytl.SafeHelper.EncryptionHelper.Decrypt(Easytl.SafeHelper.EncryptionHelper.Encrypt_RPType,Easytl.SafeHelper.EncryptionHelper.Encrypt_Type,System.String,System.String,System.String,System.Security.Cryptography.CipherMode,System.Security.Cryptography.PaddingMode,System.Text.Encoding)">
            <summary>
            解密（输入16进制解密字符串）
            </summary>
        </member>
        <member name="M:Easytl.SafeHelper.EncryptionHelper.Hash(System.Security.Cryptography.HashAlgorithm,System.String,System.Text.Encoding)">
            <summary>
            哈希算法
            </summary>
        </member>
        <member name="T:Easytl.SqlHelper.OleDbHelper">
            <summary>
            OleDb数据库帮助类
            </summary>
        </member>
        <member name="F:Easytl.SqlHelper.OleDbHelper.ole_connection">
            <summary>
            数据库连接类
            </summary>
        </member>
        <member name="F:Easytl.SqlHelper.OleDbHelper.ole_command">
            <summary>
            数据库命令类
            </summary>
        </member>
        <member name="F:Easytl.SqlHelper.OleDbHelper.ole_Adapter">
            <summary>
            数据表填充类
            </summary>
        </member>
        <member name="M:Easytl.SqlHelper.OleDbHelper.#ctor(System.String)">
            <summary>
            构造函数
            </summary>  
            <param name="db_path">数据库路径</param>  
        </member>
        <member name="M:Easytl.SqlHelper.OleDbHelper.ConnectConn(System.String)">
            <summary>
            测试数据库连接情况
            </summary>
            <param name="db_path">数据库路径</param>  
        </member>
        <member name="M:Easytl.SqlHelper.OleDbHelper.Close">
            <summary>
            关闭数据库连接
            </summary>
        </member>
        <member name="M:Easytl.SqlHelper.OleDbHelper.ExecuteNonQuery(System.String)">
            <summary>  
            执行sql语句(返回受影响的行数)
            </summary>  
            <param name="strSql">sql语句</param>  
            <returns>返回结果</returns>  
        </member>
        <member name="M:Easytl.SqlHelper.OleDbHelper.ExecuteScalar(System.String)">
            <summary>  
            执行sql语句(返回结果的第一行第一列)
            </summary>  
            <param name="strSql">sql语句</param>  
            <returns>返回结果</returns>  
        </member>
        <member name="M:Easytl.SqlHelper.OleDbHelper.GetDataSet(System.String)">
            <summary>
            从数据库里面获取数据  
            </summary>  
            <param name="strSql">查询语句</param>  
            <returns>数据列表</returns>  
        </member>
        <member name="T:Easytl.SqlHelper.SqlServerHelper">
            <summary>
            SqlServer数据库帮助类
            </summary>
        </member>
        <member name="P:Easytl.SqlHelper.SqlServerHelper.ConnectionString">
            <summary>
            数据库连接字符串
            </summary>
        </member>
        <member name="M:Easytl.SqlHelper.SqlServerHelper.ConnectConn(System.String)">
            <summary>
            测试数据库连接情况
            </summary>
            <returns></returns>
        </member>
        <member name="M:Easytl.SqlHelper.SqlServerHelper.ExecuteNonQuery(System.String,System.Data.CommandType)">
            <summary>
             用于对数据库进行增，删，改(返回受影响的行数)。
            </summary>
            <param name="sql"></param>
            <returns></returns>
        </member>
        <member name="M:Easytl.SqlHelper.SqlServerHelper.ExecuteNonQuery(System.String,System.Data.SqlClient.SqlParameter[],System.Data.CommandType)">
            <summary>
            用于对数据库进行增，删，改(返回受影响的行数)。
            </summary>
            <param name="sql"></param>
            <param name="paras"></param>
            <returns>int</returns>
        </member>
        <member name="M:Easytl.SqlHelper.SqlServerHelper.GetDataSet(System.String,System.Data.CommandType)">
            <summary>
            用于对数据库进行查询并获取一个数据表。
            </summary>
            <param name="sql"></param>
            <returns>DataSet</returns>
        </member>
        <member name="M:Easytl.SqlHelper.SqlServerHelper.GetDataSet(System.String,System.Data.SqlClient.SqlParameter[],System.Data.CommandType)">
            <summary>
            用于对数据库进行查询并获取一个数据表。
            </summary>
            <param name="sql"></param>
            <param name="paras"></param>
            <returns></returns>
        </member>
        <member name="M:Easytl.SqlHelper.SqlServerHelper.ExecuteScalar(System.String,System.Data.CommandType)">
            <summary>
            用于对数据库进行查询并返回第一行第一列。
            </summary>
            <param name="sql"></param>
            <returns>bool</returns>
        </member>
        <member name="M:Easytl.SqlHelper.SqlServerHelper.ExecuteScalar(System.String,System.Data.SqlClient.SqlParameter[],System.Data.CommandType)">
            <summary>
            用于对数据库进行查询并返回第一行第一列。
            </summary>
            <param name="sql"></param>
            <param name="paras"></param>
            <returns>bool</returns>
        </member>
        <member name="M:Easytl.SqlHelper.SqlServerHelper.GetList(System.Int32,System.Int32,System.String)">
            <summary>
            分页获取数据列表
            </summary>
        </member>
        <member name="T:Easytl.FileHelper.FolderHelper">
            <summary>
            各种操作文件夹的方法
            </summary>
        </member>
        <member name="M:Easytl.FileHelper.FolderHelper.CreateFolder(System.String)">
            <summary>
            创建文件夹
            </summary>
            <param name="DirectoryPath">文件夹路径</param>
        </member>
        <member name="M:Easytl.FileHelper.FolderHelper.ShareNetFolder(System.String,System.String,System.String,System.Boolean)">
            <summary>
            设置文件夹共享
            </summary>
            <param name="FolderPath">文件夹路径</param>
            <param name="ShareName">共享名</param>
            <param name="Description">共享注释</param>
            <param name="NetHide">是否在网络中隐藏</param>
        </member>
        <member name="M:Easytl.FileHelper.FolderHelper.OpenShareNetFolder(System.String,System.String,System.String,System.String@)">
            <summary>
            打开通道连接共享文件夹
            </summary>
        </member>
        <member name="M:Easytl.FileHelper.FolderHelper.CloseShareNetFolder(System.String,System.String@)">
            <summary>
            关闭与共享文件夹的通道
            </summary>
        </member>
        <member name="T:Easytl.FileHelper.IniHelper">
            <summary>
            各种操作Ini文件的方法
            </summary>
        </member>
        <member name="M:Easytl.FileHelper.IniHelper.WritePrivateProfileString(System.String,System.String,System.String,System.String)">
            <summary>
            写入ini文件
            </summary>
            <param name="section"></param>
            <param name="key"></param>
            <param name="val"></param>
            <param name="filePath"></param>
            <returns></returns>
        </member>
        <member name="M:Easytl.FileHelper.IniHelper.GetPrivateProfileString(System.String,System.String,System.String,System.Text.StringBuilder,System.Int32,System.String)">
            <summary>
            读取ini文件
            </summary>
            <param name="section"></param>
            <param name="key"></param>
            <param name="def"></param>
            <param name="retVal"></param>
            <param name="size"></param>
            <param name="filePath"></param>
            <returns></returns>
        </member>
        <member name="M:Easytl.FileHelper.IniHelper.WriteIni(System.String,System.String,System.String,System.String)">
            <summary>
            写入ini文件
            </summary>
            <param name="FileUrl">ini文件路径</param>
            <param name="Section">目录</param>
            <param name="ParaName">属性名称</param>
            <param name="ParaValue">属性值</param>
            <returns>1：成功，-1：ini文件不存在，其他：失败</returns>
        </member>
        <member name="M:Easytl.FileHelper.IniHelper.ReadIni(System.String,System.String,System.String)">
            <summary>
            读取ini文件
            </summary>
            <param name="FileUrl">ini文件路径</param>
            <param name="Section">目录</param>
            <param name="ParaName">属性名称</param>
            <returns>1：成功，-1：ini文件不存在，其他：失败</returns>
        </member>
        <member name="T:Easytl.FileHelper.LogHelper">
            <summary>
            各种操作Log文件的方法
            </summary>
        </member>
        <member name="M:Easytl.FileHelper.LogHelper.WriteLogHasDate_WinForm(System.String,System.String)">
            <summary>
            写入日志文件（适用于winform程序）
            </summary>
            <param name="Message">日志记录</param>
            <param name="RecordType">日志类型</param>
        </member>
        <member name="M:Easytl.FileHelper.LogHelper.WriteLog_WinForm(System.String,System.String,System.Boolean)">
            <summary>
            写入日志文件（适用于winform程序）
            </summary>
            <param name="Message">日志记录</param>
            <param name="RecordStartupPath">程序内日志路径，主目录为exe程序文件夹</param>
            <param name="ShowTime">是否在记录前显示时间</param>
        </member>
        <member name="M:Easytl.FileHelper.LogHelper.WriteLog(System.String,System.String,System.Boolean)">
            <summary>
            写入日志文件
            </summary>
        </member>
        <member name="T:Easytl.Properties.Resources">
            <summary>
              一个强类型的资源类，用于查找本地化的字符串等。
            </summary>
        </member>
        <member name="P:Easytl.Properties.Resources.ResourceManager">
            <summary>
              返回此类使用的缓存的 ResourceManager 实例。
            </summary>
        </member>
        <member name="P:Easytl.Properties.Resources.Culture">
            <summary>
              使用此强类型资源类，为所有资源查找
              重写当前线程的 CurrentUICulture 属性。
            </summary>
        </member>
        <member name="P:Easytl.Properties.Resources.ImageStream">
            <summary>
              查找 System.Windows.Forms.ImageListStreamer 类型的本地化资源。
            </summary>
        </member>
        <member name="P:Easytl.Properties.Resources.TrayLocation">
            <summary>
              查找类似于 {X=17,Y=17} 的 System.Drawing.Point 类型的本地化资源。
            </summary>
        </member>
        <member name="T:Easytl.WebControllers.BaseController`1">
            <summary>
            自定义控制器基类
            </summary>
            <typeparam name="Model_T">登录用户类类型</typeparam>
        </member>
        <member name="T:Easytl.WebControllers.BaseController`1.eAlertType">
            <summary>
            弹出消息类型
            </summary>
        </member>
        <member name="F:Easytl.WebControllers.BaseController`1.eAlertType.Info">
            <summary>
            信息
            </summary>
        </member>
        <member name="F:Easytl.WebControllers.BaseController`1.eAlertType.Success">
            <summary>
            成功
            </summary>
        </member>
        <member name="F:Easytl.WebControllers.BaseController`1.eAlertType.Warning">
            <summary>
            提醒
            </summary>
        </member>
        <member name="F:Easytl.WebControllers.BaseController`1.eAlertType.Danger">
            <summary>
            错误
            </summary>
        </member>
        <member name="P:Easytl.WebControllers.BaseController`1.AlertType">
            <summary>
            获取或设置弹出消息类型
            </summary>
        </member>
        <member name="P:Easytl.WebControllers.BaseController`1.AlertMsg">
            <summary>
            获取或设置弹出消息内容
            </summary>
        </member>
        <member name="P:Easytl.WebControllers.BaseController`1.AlertJsonStr">
            <summary>
            获取弹出消息Json字符串
            </summary>
        </member>
        <member name="P:Easytl.WebControllers.BaseController`1.CheckLoginDefault">
            <summary>
            检查登录默认值
            </summary>
        </member>
        <member name="P:Easytl.WebControllers.BaseController`1.CheckPermissionsDefault">
            <summary>
            检查权限默认值
            </summary>
        </member>
        <member name="P:Easytl.WebControllers.BaseController`1.LoginFailUrl">
            <summary>
            当页面需要验证登录，而用户未登录时跳转的页面
            </summary>
        </member>
        <member name="P:Easytl.WebControllers.BaseController`1.PermissionsFailUrl">
            <summary>
            当页面需要验证权限，而用户没有权限时跳转的页面
            </summary>
        </member>
        <member name="P:Easytl.WebControllers.BaseController`1.Model_Login">
            <summary>
            当前登录用户
            </summary>
        </member>
        <member name="P:Easytl.WebControllers.BaseController`1.Cookie_Login_Adr">
            <summary>
            保存在Cookie里的登录信息的地址
            </summary>
        </member>
        <member name="P:Easytl.WebControllers.BaseController`1.Cookie_LoginName_ModelProName">
            <summary>
            保存在Cookie里的登录信息的用户名取自Model_Login哪个属性
            </summary>
        </member>
        <member name="P:Easytl.WebControllers.BaseController`1.Cookie_LoginPwd_ModelProName">
            <summary>
            保存在Cookie里的登录信息的用户密码取自Model_Login哪个属性
            </summary>
        </member>
        <member name="P:Easytl.WebControllers.BaseController`1.Cookie_Login_Expires">
            <summary>
            保存在Cookie里的登录信息的过期时间（以天为单位，默认7天）
            </summary>
        </member>
        <member name="P:Easytl.WebControllers.BaseController`1.PreviousPageName">
            <summary>
            上一页的保存在Cookie里的键名称
            </summary>
        </member>
        <member name="P:Easytl.WebControllers.BaseController`1.PreviousPageUrl_NoContain">
            <summary>
            上一页不包含哪些页面
            </summary>
        </member>
        <member name="P:Easytl.WebControllers.BaseController`1.PreviousPageUrl_Default">
            <summary>
            上一页默认地址（当无上一页时跳转到该地址）
            </summary>
        </member>
        <member name="P:Easytl.WebControllers.BaseController`1.PreviousPageUrl">
            <summary>
            上一页（两次跳转相同页不重新赋值，去除OPT后统计）
            </summary>
        </member>
        <member name="P:Easytl.WebControllers.BaseController`1.CookieVCodePwd">
            <summary>
            Cookie中验证码的加密密钥
            </summary>
        </member>
        <member name="M:Easytl.WebControllers.BaseController`1.C``1(System.Object,``0)">
            <summary>
            类型转换
            </summary>
        </member>
        <member name="M:Easytl.WebControllers.BaseController`1.R``1(``0@,System.Object[])">
            <summary>
            类实例化
            </summary>
        </member>
        <member name="M:Easytl.WebControllers.BaseController`1.GetLoginModel(`0)">
            <summary>
            从数据库获取登录用户的信息，必须重写此方法
            </summary>
        </member>
        <member name="M:Easytl.WebControllers.BaseController`1.CheckPermissions">
            <summary>
            验证权限是否正确
            </summary>
        </member>
        <member name="M:Easytl.WebControllers.BaseController`1.View">
            <summary>
            创建一个将视图呈现给响应的 System.Web.Mvc.ViewResult 对象。
            </summary>
            <returns>将视图呈现给响应的视图结果。</returns>
        </member>
        <member name="M:Easytl.WebControllers.BaseController`1.View(System.Object)">
            <summary>
            使用模型创建一个将视图呈现给响应的 System.Web.Mvc.ViewResult 对象。
            </summary>
            <param name="model">视图呈现的模型。</param>
            <returns>视图结果。</returns>
        </member>
        <member name="M:Easytl.WebControllers.BaseController`1.OnActionExecuting(System.Web.Mvc.ActionExecutingContext)">
            <summary>
            在调用操作方法前调用。
            </summary>
            <param name="filterContext">有关当前请求和操作的信息</param>
        </member>
        <member name="M:Easytl.WebControllers.BaseController`1.SetLoginCookie(`0)">
            <summary>
            保存用户登录信息
            </summary>
        </member>
        <member name="M:Easytl.WebControllers.BaseController`1.GetLoginCookie">
            <summary>
            获取用户登录信息
            </summary>
            <returns>用户登录信息</returns>
        </member>
        <member name="M:Easytl.WebControllers.BaseController`1.ClearLoginCookie">
            <summary>
            清除用户登录信息
            </summary>
        </member>
        <member name="M:Easytl.WebControllers.BaseController`1.SetCookieVCode(System.String)">
            <summary>
            创建一个随机验证码并保存在Cookie中
            </summary>
            <param name="CookieKey">Cookie键名</param>
        </member>
        <member name="M:Easytl.WebControllers.BaseController`1.VerificationCookieVCode(System.String)">
            <summary>
            验证Cookie中验证码是否存在并正确
            </summary>
            <param name="CookieKey">Cookie键名</param>
        </member>
        <member name="P:Easytl.WebControllers.BaseController`1.UrlParas">
            <summary>
            提取地址栏参数
            </summary>
        </member>
        <member name="P:Easytl.WebControllers.BaseController`1.FormParas">
            <summary>
            提取表单参数
            </summary>
        </member>
        <member name="T:Easytl.WebControllers.CheckAttribute">
            <summary>
            请求前检查是否需要特殊验证
            </summary>
        </member>
        <member name="P:Easytl.WebControllers.CheckAttribute.CheckLogin">
            <summary>
            是否需要登录验证
            </summary>
        </member>
        <member name="P:Easytl.WebControllers.CheckAttribute.CheckPermissions">
            <summary>
            是否需要权限验证
            </summary>
        </member>
        <member name="T:Easytl.WebControllers.PagerController`1">
            <summary>
            自定义控制器分页基类
            </summary>
            <typeparam name="Model_T">登录用户类类型</typeparam>
        </member>
        <member name="P:Easytl.WebControllers.PagerController`1.PageIndexName">
            <summary>
            获取或设置当前页的参数名
            </summary>
        </member>
        <member name="P:Easytl.WebControllers.PagerController`1.PageSizeName">
            <summary>
            获取或设置页条数的参数名
            </summary>
        </member>
        <member name="P:Easytl.WebControllers.PagerController`1.PageIndex">
            <summary>
            获取当前页码
            </summary>
        </member>
        <member name="P:Easytl.WebControllers.PagerController`1.PageSize">
            <summary>
            获取或设置当前每页显示数据条数
            </summary>
        </member>
        <member name="P:Easytl.WebControllers.PagerController`1.RecordCount">
            <summary>
            获取或设置总记录数
            </summary>
        </member>
        <member name="P:Easytl.WebControllers.PagerController`1.PageCount">
            <summary>
            获取总页码数
            </summary>
        </member>
        <member name="P:Easytl.WebControllers.PagerController`1.ShowPageCount">
            <summary>
            获取或设置显示页码数
            </summary>
        </member>
        <member name="M:Easytl.WebControllers.PagerController`1.OnActionExecuted(System.Web.Mvc.ActionExecutedContext)">
            <summary>
            在调用操作方法后调用
            </summary>
        </member>
        <member name="T:Easytl.WebControllers.Pagination">
            <summary>
            分页类
            </summary>
        </member>
        <member name="M:Easytl.WebHelper.RequestHelper.GetRequestType">
            <summary>
            获取当前请求方式
            </summary>
            <returns></returns>
        </member>
        <member name="M:Easytl.WebHelper.RequestHelper.GetPara``1(Easytl.WebHelper.WebHelper.RequestType,System.String,``0,System.Boolean)">
            <summary>
            获取参数
            </summary>
        </member>
        <member name="M:Easytl.WebHelper.RequestHelper.HttpRequest(Easytl.WebHelper.WebHelper.RequestType,System.Net.HttpStatusCode@,System.String@,System.String,System.String,System.Collections.Specialized.NameValueCollection,System.String,System.String,System.Int32)">
            <summary>
            模拟http请求
            </summary>
        </member>
        <member name="M:Easytl.WebHelper.RequestHelper.HttpRequest_PostForm(System.Net.HttpStatusCode@,System.String@,System.String,System.Collections.Specialized.NameValueCollection,System.Collections.Specialized.NameValueCollection,System.String,System.Int32)">
            <summary>
            模拟http/post请求
            </summary>
        </member>
        <member name="M:Easytl.WebHelper.RequestHelper.HttpRequest_PostForm(System.Net.HttpStatusCode@,System.String@,System.String,System.Collections.Specialized.NameValueCollection,System.Collections.Generic.List{Easytl.WebHelper.PostUploadFile},System.Collections.Specialized.NameValueCollection,System.String,System.Int32,System.String)">
            <summary>
            模拟http/post请求(multipart/form-data)（包含文件上传）
            </summary>
        </member>
        <member name="M:Easytl.WebHelper.RequestHelper.HttpRequest_PostForm``1(System.Net.HttpStatusCode@,System.String@,System.String,``0,System.Reflection.BindingFlags,System.Collections.Specialized.NameValueCollection,System.String,System.Int32)">
            <summary>
            模拟http/post请求
            </summary>
        </member>
        <member name="M:Easytl.WebHelper.RequestHelper.SaveUploadFile(System.String,System.String,System.String,System.String@,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            保存上传文件
            </summary>
            <param name="DirectoryVirtualPath">目录虚拟路径</param>
            <param name="FileName">文件名称</param>
            <param name="FilePostName">文件上传名称</param>
            <param name="FileSaveUrl">文件保存后的网络地址</param>
            <param name="AddTime">是否在文件名称后加时间</param>
            <param name="CreateDateFolder">是否分时间文件夹存储文件</param>
            <param name="AddDomainName">是否返回带域名的网络地址</param>
        </member>
        <member name="M:Easytl.WebHelper.RequestHelper.DownloadFile(System.String,System.String,System.String,System.String,System.String@,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            下载网络资源
            </summary>
            <param name="Url">网络资源地址</param>
            <param name="FileType">网络文件类型</param>
            <param name="DirectoryVirtualPath">目录虚拟路径</param>
            <param name="FileName">文件名称</param>
            <param name="FileSaveUrl">文件保存后的网络地址</param>
            <param name="AddTime">是否在文件名称后加时间</param>
            <param name="CreateDateFolder">是否分时间文件夹存储文件</param>
            <param name="AddDomainName">是否返回带域名的网络地址</param>
            <returns></returns>
        </member>
        <member name="M:Easytl.WebHelper.RequestHelper.GetHtml(System.String,System.String)">
            <summary>
            模拟浏览器抓取网页内容
            </summary>
        </member>
        <member name="T:Easytl.WebHelper.PostUploadFile">
            <summary>
            上传文件类
            </summary>
        </member>
        <member name="P:Easytl.WebHelper.PostUploadFile.FieldName">
            <summary>
            上传文件时的表单域名称
            </summary>
        </member>
        <member name="P:Easytl.WebHelper.PostUploadFile.FileName">
            <summary>
            上传文件的文件名
            </summary>
        </member>
        <member name="P:Easytl.WebHelper.PostUploadFile.ContentType">
            <summary>
            文件类型
            </summary>
        </member>
        <member name="P:Easytl.WebHelper.PostUploadFile.ContentLength">
            <summary>
            文件字节大小
            </summary>
        </member>
        <member name="P:Easytl.WebHelper.PostUploadFile.Content">
            <summary>
            文件二进制内容
            </summary>
        </member>
        <member name="M:Easytl.WebHelper.ResponseHelper.CreateVerificationImage(System.Int32,System.String)">
            <summary>
            创建随机码图片
            </summary>
            <param name="length">随机码长度</param>
            <param name="RandomCode">随机码</param>
        </member>
        <member name="M:Easytl.WebHelper.ResponseHelper.ExportExcel``1(System.Collections.Generic.Dictionary{System.String,System.String},System.Collections.Generic.List{``0},System.String,System.String)">
            <summary>
            导出excel文件
            </summary>
            <param name="Columns">列名和显示名的键值对</param>
            <param name="DataList">数据列表</param>
            <param name="ExcelName">导出的excel文件名称</param>
            <param name="encodingType">字符集</param>
        </member>
        <member name="T:Easytl.WebHelper.WebHelper.RequestType">
            <summary>
            请求方式
            </summary>
        </member>
        <member name="F:Easytl.WebHelper.WebHelper.RequestType.NoKown">
            <summary>
            未知
            </summary>
        </member>
        <member name="F:Easytl.WebHelper.WebHelper.RequestType.Get">
            <summary>
            Get请求
            </summary>
        </member>
        <member name="F:Easytl.WebHelper.WebHelper.RequestType.Post">
            <summary>
            Post请求
            </summary>
        </member>
        <member name="F:Easytl.WebHelper.WebHelper.RequestType.Put">
            <summary>
            Put请求
            </summary>
        </member>
        <member name="F:Easytl.WebHelper.WebHelper.RequestType.Delete">
            <summary>
            Delete请求
            </summary>
        </member>
        <member name="M:Easytl.WebHelper.WebHelper.SetCookie(System.String,System.Collections.Specialized.NameValueCollection,System.DateTime)">
            <summary>
            设置Cookie
            </summary>
            <param name="CookieKey">Cookie名称</param>
            <param name="CookieValues">Cookie值</param>
            <param name="Expires">到期时间</param>
        </member>
        <member name="M:Easytl.WebHelper.WebHelper.SetCookieValue(System.String,System.String,System.DateTime)">
            <summary>
            设置Cookie
            </summary>
            <param name="CookieKey">Cookie名称</param>
            <param name="CookieValue">Cookie值</param>
            <param name="Expires">到期时间</param>
        </member>
        <member name="M:Easytl.WebHelper.WebHelper.GetCookie(System.String)">
            <summary>
            获取Cookie
            </summary>
            <param name="CookieKey">Cookie名称</param>
            <returns>Cookie值</returns>
        </member>
        <member name="M:Easytl.WebHelper.WebHelper.GetCookieValue(System.String)">
            <summary>
            获取Cookie
            </summary>
            <param name="CookieKey">Cookie名称</param>
            <returns>Cookie值</returns>
        </member>
        <member name="M:Easytl.WebHelper.WebHelper.ClearCookie(System.String)">
            <summary>
            清理Cookie
            </summary>
            <param name="CookieKey">Cookie名称</param>
        </member>
    </members>
</doc>
